version: 2.1
orbs:
  windows: circleci/windows@2.2.0
  gcp-gke: circleci/gcp-gke@0.1.0
  gcr: circleci/gcp-gcr@0.0.2
jobs:
  build:
    executor:
      name: windows/default
    steps:
      - checkout
      - run:
          name: Restore
          command: dotnet restore
          working_directory: TheGramProfile
      - run:
          name: Build
          command: dotnet build -c Development
          working_directory: TheGramProfile
  BuildPushImageDocker:
    description: Build and push image to Google Container Registry
    machine: true
    steps:
      - checkout
      - gcr/gcr-auth
      - gcr/build-image:
          image: the-gram-profile
          tag: "v2.4" #Change version number e.g to 'v3' when updating application
      - gcr/push-image:
          image: the-gram-profile
          tag: "v2.4" #Change version number e.g to 'v3' when updating application

  deploy:
    description: Deploy application to Google Kubernetes Engine
    machine: true
    steps:
      # Install `gcloud` and `kubectl` if not already installed.
      - gcp-gke/install
      # Initialize the `gcloud` CLI.
      - gcp-gke/init
      # Update a deployment Docker image.
      - gcp-gke/rollout-image:
          deployment: the-gram-profile
          container: the-gram-profile
          image: gcr.io/$GCP_PROJECT_ID/the-gram-profile:v2.4 # change version when updating
workflows:
  build_update_deploy:
    jobs:
      - build
      - BuildPushImageDocker:
          requires:
            - build
      - deploy:
          requires:
            - BuildPushImageDocker
  # dockerize:
  #   machine: true
  #   steps:
  #     - checkout
  #     # start proprietary DB using private Docker image
  #     # with credentials stored in the UI
  #     - name: Sign in to docker
  #       run: |
  #         echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USERNAME --password-stdin
  #     # build the application image
  #     - name: Build image
  #       run: docker build -t tommygoossens/the-gram-profile:$CIRCLE_BRANCH .
  #     # deploy the image
  #     - name: Publish docker image to registry
  #       run: docker push tommygoossens/the-gram-profile:$CIRCLE_BRANCH
  # version: 2.1
  # orbs:
  #   node: circleci/node@1.0.1
  #   gcp-gke: circleci/gcp-gke@0.1.0
  #   gcr: circleci/gcp-gcr@0.0.2
  # jobs:
  #   build:
  #     description: Install npm
  #     # machine option runs your jobs in a dedicated, ephemeral VM that has the following specifications:
  #     machine: true
  #     steps:
  #       - checkout
  #       # Install node
  #       - node/install
  #       # Install npm
  #       - node/install-npm
  #       # Download and cache dependencies
  #       - node/with-cache:
  #           steps:
  #             - run:
  #                 name: Install application dependencies
  #                 command: npm install
  #           # Save cache
  #           cache-key: package.json
  #           # Ignore non-checksum cache hits
  #           use-strict-cache: true
  #   Build-Push-Image-Docker:
  #     description: Build and push image to Google Container Registry
  #     machine: true
  #     steps:
  #       - checkout
  #       - gcr/gcr-auth
  #       - gcr/build-image:
  #           image: circle-gke
  #           tag: "v2" #Change version number e.g to 'v3' when updating application
  #       - gcr/push-image:
  #           image: circle-gke
  #           tag: "v2" #Change version number e.g to 'v3' when updating application
  #   deploy:
  #     description: Deploy application to Google Kubernetes Engine
  #     machine: true
  #     steps:
  #       # Install `gcloud` and `kubectl` if not already installed.
  #       - gcp-gke/install
  #       # Initialize the `gcloud` CLI.
  #       - gcp-gke/init
  #       # Update a deployment Docker image.
  #       - gcp-gke/rollout-image:
  #           deployment: circle-ci-cluster
  #           container: dominic-backend
  #           image: gcr.io/circle-ci-demo/circle-gke:v2 # change version when updating
  # workflows:
  #   build_update_deploy:
  #     jobs:
  #       - build
  #       - Build-Push-Image-Docker:
  #           requires:
  #             - build
  #       - deploy:
  #           requires:
  #             - Build-Push-Image-Docker
